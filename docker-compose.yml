version: "3.8"

# === Named volumes (persist data) ===
volumes:
  jenkins_home:   # Jenkins home (jobs, plugins, config)
  docker_data:    # Docker Engine image/layer cache (inside DinD)
  docker_certs:   # TLS certs auto-generated by DinD

# === Isolated network so Jenkins can reach DinD at tcp://docker:2376 ===
networks:
  jenkins-net:

services:
  # ============== Docker-in-Docker (DinD) ==============
  # Provides a Docker Engine that Jenkins talks to over TLS.
  docker:
    image: docker:27-dind
    container_name: dind
    privileged: true                 # required by DinD
    environment:
      - DOCKER_TLS_CERTDIR=/certs    # enable TLS; client certs will be under /certs/client
      - DOCKER_DRIVER=overlay2       # modern storage driver
    volumes:
      - docker_data:/var/lib/docker  # persist image/layer cache across restarts
      - docker_certs:/certs          # share certs with Jenkins (client certs mounted read-only there)
    networks:
      jenkins-net:
        aliases:
          - docker                    # hostname "docker" â†’ Jenkins uses DOCKER_HOST=tcp://docker:2376
    healthcheck:
      test: ["CMD", "docker", "info"]
      interval: 10s
      timeout: 5s
      retries: 10

  # ================= Jenkins Controller =================
  # Built image includes: docker CLI, Git, required plugins, and JCasC config.
  jenkins:
    build: ./jenkins                  # see jenkins/Dockerfile
    container_name: jenkins
    depends_on:
      docker:
        condition: service_healthy    # wait for DinD to be ready
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
      - CASC_JENKINS_CONFIG=/var/jenkins_home/casc_configs/jenkins.yaml  # load security config via JCasC
      - DOCKER_HOST=tcp://docker:2376         # talk to DinD over TLS
      - DOCKER_TLS_VERIFY=1
      - DOCKER_CERT_PATH=/certs/client
    volumes:
      - jenkins_home:/var/jenkins_home         # persist Jenkins data
      - docker_certs:/certs:ro                 # mount certs read-only; Jenkins uses /certs/client/*
    ports:
      - "8080:8080"     # Jenkins UI
      - "50000:50000"   # Inbound agents (optional)
    networks:
      - jenkins-net

